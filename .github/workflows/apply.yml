name: Terraform Apply

on:
  pull_request_review:
    types: [submitted]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_VERSION: "1.2.9"
  TF_IN_AUTOMATION: "True"

jobs:
  terraform_apply:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    steps:
      - uses: actions/checkout@v3

      - name: Get PR ID
        id: pr-id
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        working-directory: terraform/
        run: |
          export AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}
          terraform init

      - name: List files in terraform directory
        run: ls -la terraform/

#      - name: List files in opt directory
#        run: ls -la /opt/plantoexec/

#      - name: Download Plan Artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: ${{ steps.pr-id.outputs.PR_NUMBER }}-tf-plan
#          path: /opt/plantoexec/tfplan


      - name: Terraform Plan
        id: plan
        working-directory: terraform/
        run: |
          touch tfplan
          terraform plan -lock=false -input=false -out=tfplan
          cp tfplan /opt/plantoexec/
          readlink -f tfplan

      - name: Terraform Apply
        id: apply
        working-directory: terraform/
        run: |
          terraform apply -no-color tfplan
