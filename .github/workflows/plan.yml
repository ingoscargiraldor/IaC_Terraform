name: "Terraform Plan"

on:
  pull_request:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_VERSION: "1.2.9"
  TF_IN_AUTOMATION: "True"
  AWS_REGION: "us-east-1"

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Esto asegura que todo el historial esté disponible para la detección de cambios

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::880616236833:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
        # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Get PR ID
        id: pr-id
        shell: bash
        run: |
          PR_NUMBER=${{ github.event.number }}
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Detect changed folders
        id: detect-folder
        run: |
          # Listar todos los directorios que han cambiado
          FOLDERS_CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep '/' | awk -F'/' '{print $1}' | sort -u)
          echo "Folders changed: $FOLDERS_CHANGED"
          # Asumimos que solo nos interesa el primer directorio listado
          FIRST_FOLDER=$(echo $FOLDERS_CHANGED | awk '{print $1}')
          echo "FIRST_FOLDER=$FIRST_FOLDER" >> $GITHUB_ENV
  
      - name: Use the folder name
        run: |
          echo "Changes detected in folder: $FIRST_FOLDER"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        working-directory: $FIRST_FOLDER/
        run: |
          terraform init

      - name: Terraform Plan
        id: plan
        working-directory: $FIRST_FOLDER/
        run: |
          touch tfplan
          terraform plan -lock=false -input=false -out=tfplan
          readlink -f tfplan
      
      - name: List output files
        working-directory: $FIRST_FOLDER/
        run: ls -la

      - name: Save Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.pr-id.outputs.PR_NUMBER }}-tf-plan
          path: $FIRST_FOLDER/

      - name: List files in terraform directory
        run: ls -la $FIRST_FOLDER/